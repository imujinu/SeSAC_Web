<!DOCTYPE html>
<html lang="ko">
  <%- include('include/include', { title: '로그인' })%>
  <body>
    <h1>로그인</h1>
    <!-- 
      [로그인] 버튼을 클릭하면 profile.ejs에서 특정 유저 정보를 보여주어야 하기 때문에 
      userid 정보를 value에 저장(POST /user/signin 요청의 응답을 받은 후 수행)하여
      폼(input)이 보이지 않도록 hidden 처리함
    -->
    <form name="form_info" action="/user/profile" method="POST">
      <input type="hidden" name="userid" />
    </form>

    <form name="form_login">
      <label for="userid">ID</label>
      <input id="userid" type="text" name="userid" required /><br />
      <label for="password">Password</label>
      <input id="password" type="password" name="pw" required /><br />
      <button type="button" onclick="login();">Login</button>
    </form>

    <!-- TODO: href 속성값 설정하기 -->
    <a href="#">Register</a>

    <script>
      // TODO: [Login] 버튼 클릭시 서버에 로그인 요청하기
      // POST /user/signin
      function login() {
        const form = document.forms["form_login"];
        const form_info = document.forms["form_info"];
        if (form.userid.value.length === 0 || form.pw.value.length === 0) {
          alert("이름과 패스워드 이름을 모두 기입해주세요");
          return;
        }

        if (form.userid.value.length > 20 || form.pw.value.length > 20) {
          alert("이름과 패스워드 이름은 20자 미만으로 작성해주세요!");
          return;
        }
        axios({
          url: "/user/signin",
          method: "post",
          data: {
            id: form.userid.value,
            pw: form.pw.value,
          },
        })
          .then((res) => {
            if (res.data.issuccess) {
              form_info.userid.value = res.data.id;
              form_info.submit();
            } else if (!res.data.issuccess) {
              alert("로그인 실패!");
              form.reset();
              form_info.reset();
            }
          })
          .catch((err) => {
            console.error(err);
          });
      }
    </script>
  </body>
</html>
